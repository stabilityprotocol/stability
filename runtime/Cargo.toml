[features]
aura = []
default = ['aura', 'std', 'with-rocksdb-weights']
manual-seal = ['with-rocksdb-weights']
runtime-benchmarks = [
	'frame-benchmarking',
	'frame-system-benchmarking',
	'frame-system/runtime-benchmarks',
	'pallet-ethereum/runtime-benchmarks',
	'pallet-evm/runtime-benchmarks',
	'pallet-grandpa/runtime-benchmarks',
	'pallet-hotfix-sufficients/runtime-benchmarks',
	'pallet-timestamp/runtime-benchmarks',
]
std = [
	'account/std',
	"fp-account/std",
	"fp-evm/std",
	'fp-rpc/std',
	'fp-self-contained/std',
	'frame-executive/std',
	'frame-metadata-hash-extension/std',
	'frame-support/std',
	'frame-system-rpc-runtime-api/std',
	'frame-system/std',
	"moonbeam-evm-tracer/std",
	"moonbeam-rpc-primitives-debug/std",
	"moonbeam-rpc-primitives-txpool/std",
	'pallet-aura/std',
	'pallet-base-fee/std',
	'pallet-collective/std',
	'pallet-custom-balances/std',
	'pallet-dnt-fee-controller/std',
	'pallet-ethereum/std',
	'pallet-evm-chain-id/std',
	'pallet-evm-precompile-modexp/std',
	'pallet-evm-precompile-sha3fips/std',
	'pallet-evm-precompile-simple/std',
	'pallet-evm/std',
	'pallet-grandpa/std',
	'pallet-hotfix-sufficients/std',
	'pallet-root-controller/std',
	'pallet-session/std',
	'pallet-supported-tokens-manager/std',
	'pallet-timestamp/std',
	'pallet-transaction-payment-rpc-runtime-api/std',
	'pallet-transaction-payment/std',
	'pallet-upgrade-runtime-proposal/std',
	'pallet-validator-fee-selector/std',
	'pallet-validator-keys-controller/std',
	'pallet-validator-set/std',
	'parity-scale-codec/std',
	'precompile-upgrade-runtime-controller/std',
	'runner/std',
	'scale-info/std',
	'sp-api/std',
	'sp-block-builder/std',
	'sp-consensus-aura/std',
	'sp-core/std',
	'sp-inherents/std',
	'sp-io/std',
	'sp-offchain/std',
	'sp-runtime/std',
	'sp-session/std',
	'sp-std/std',
	'sp-transaction-pool/std',
	'sp-version/std',
	'sp-genesis-builder/std',
	'stability-rpc-api/std',
	'stbl-core-primitives/std',
	'stbl-primitives-fee-compatible-api/std',
	'stbl-primitives-zero-gas-transactions-api/std',
	'substrate-wasm-builder',
	"sp-debug-derive/std",
]
with-paritydb-weights = []
with-rocksdb-weights = []
evm-tracing = [
	"moonbeam-evm-tracer",
	"moonbeam-rpc-primitives-debug",
	"moonbeam-rpc-primitives-txpool",
]

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[package]
authors = ['Stability Solutions']
description = 'Stability protocol Substrate based blockchain'
edition = '2021'
license = 'Unlicense'
name = 'stability-runtime'
publish = false
version = '0.0.0'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[dependencies]
parity-scale-codec = { workspace = true, default-features = false, features = [
	"derive",
] }
scale-info = { workspace = true, features = ["derive"] }
serde = { workspace = true, optional = true }
log = { workspace = true }
# Substrate
sp-api = { workspace = true }
sp-io = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-version = { workspace = true }
sp-genesis-builder = { workspace = true }
# Substrate FRAME
frame-benchmarking = { workspace = true, optional = true }
frame-executive = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-aura = { workspace = true }
pallet-custom-balances = { workspace = true }
pallet-balances = { workspace = true }
pallet-grandpa = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-dnt-fee-controller = { workspace = true }
pallet-session = { workspace = true }
sp-application-crypto = { workspace = true }
sp-staking = { workspace = true }
# Frontier
fp-account = { workspace = true }
fp-evm = { workspace = true }
fp-rpc = { workspace = true }
fp-self-contained = { workspace = true, features = ["serde"] }
# Frontier FRAME
pallet-base-fee = { workspace = true }
pallet-ethereum = { workspace = true }
pallet-evm = { workspace = true }
pallet-evm-chain-id = { workspace = true }
pallet-evm-precompile-modexp = { workspace = true }
pallet-evm-precompile-sha3fips = { workspace = true }
pallet-evm-precompile-simple = { workspace = true }
pallet-hotfix-sufficients = { workspace = true }
pallet-sponsored-transactions = { workspace = true }
pallet-zero-gas-transactions = { workspace = true }
# Stability
pallet-evm-precompile-blake2 = { workspace = true }
pallet-evm-precompile-bn128 = { workspace = true }
precompile-utils = { workspace = true }
precompile-fee-token-selector = { workspace = true }
precompile-validator-fee-selector = { workspace = true }
pallet-user-fee-selector = { workspace = true }
pallet-validator-fee-selector = { workspace = true }
stbl-tools = { workspace = true }
precompile-validator-controller = { workspace = true }
pallet-root-controller = { workspace = true }
pallet-collective = { workspace = true }
stbl-primitives-fee-compatible-api = { workspace = true }
stbl-primitives-zero-gas-transactions-api = { workspace = true }
pallet-erc20-manager = { workspace = true }
pallet-supported-tokens-manager = { workspace = true }
precompile-supported-tokens-manager = { workspace = true }
pallet-validator-set = { workspace = true }
pallet-validator-keys-controller = { workspace = true }
pallet-upgrade-runtime-proposal = { workspace = true }
precompile-upgrade-runtime-controller = { workspace = true }
runner = { workspace = true }
precompile-fee-rewards-vault-controller = { workspace = true }
pallet-fee-rewards-vault = { workspace = true }
stbl-transaction-validator = { workspace = true }
stbl-core-primitives = { workspace = true }
account = { workspace = true }
stability-rpc-api = { workspace = true }

# Moonbeam evm tracer dependencies
moonbeam-evm-tracer = { workspace = true, optional = true, default-features = false }
moonbeam-primitives-ext = { workspace = true, optional = true, default-features = false }
moonbeam-rpc-primitives-debug = { workspace = true, optional = true, default-features = false }
moonbeam-rpc-primitives-txpool = { workspace = true, optional = true, default-features = false }

sp-debug-derive = { workspace = true, features = ["force-debug"] }
